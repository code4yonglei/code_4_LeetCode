'''886. Possible BipartitionWe want to split a group of n people (labeled from 1 to n) into two groups of any size. Each person may dislike some other people, and they should not go into the same group.Given the integer n and the array dislikes where dislikes[i] = [ai, bi] indicates that the person labeled ai does not like the person labeled bi, return true if it is possible to split everyone into two groups in this way.Example 1:Input: n = 4, dislikes = [[1,2],[1,3],[2,4]]Output: trueExplanation: The first group has [1,4], and the second group has [2,3].Example 2:Input: n = 3, dislikes = [[1,2],[1,3],[2,3]]Output: falseExplanation: We need at least 3 groups to divide them. We cannot put them in two groups.'''class Solution:    def possibleBipartition(self, n: int, dislikes: List[List[int]]) -> bool:        N, M = 2010, 20010        he, e, ne, color = [-1] * N, [0] * M, [0] * M, [0] * N        idx = 0        def add(a, b):            nonlocal idx            e[idx], ne[idx], he[a] = b, he[a], idx            idx += 1        def dfs(u, cur):            color[u] = cur            i = he[u]            while i != -1:                j = e[i]                if color[j] == cur:                    return False                if color[j] == 0 and not dfs(j, 3 - cur):                    return False                i = ne[i]            return True        for info in dislikes:            a, b = info[0], info[1]            add(a, b)            add(b, a)        for i in range(1, n + 1):            if color[i] != 0:                continue            if not dfs(i, 1):                return False        return True